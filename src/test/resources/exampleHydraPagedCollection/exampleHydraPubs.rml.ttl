@prefix rr:     <http://www.w3.org/ns/r2rml#>.
@prefix rml:    <http://semweb.mmlab.be/ns/rml#> .
@prefix crml:   <http://semweb.mmlab.be/ns/crml#> .
@prefix ql:     <http://semweb.mmlab.be/ns/ql#> .
@prefix mail:   <http://example.com/mail#>.
@prefix xsd:    <http://www.w3.org/2001/XMLSchema#>.
@prefix ex:     <http://www.example.com/> .
@prefix hydra:  <http://www.w3.org/ns/hydra/core#> .
@prefix cerif:  <http://spi-fm.uca.es/neologism/cerif#>.
@base <http://example.com/base> .

<#GroupsInput>
  rml:source <#GroupsSource> ;
  rml:referenceFormulation ql:JSONPath ;
  rml:iterator "$.[*]".

<#GroupsSource>
        a hydra:PagedCollection ;
        hydra:itemsPerPage "500"^^xsd:integer ;
        hydra:firstPage <http://explore.ilastic.be/iminds/groups> ;
        hydra:nextPage <http://explore.ilastic.be/iminds/groups?&offset=500&limit=500> .

<#InputAPI>
    a hydra:PagedCollection ;
    hydra:itemsPerPage "500"^^xsd:integer ;
    hydra:firstPage <http://explore.ilastic.be/iminds/authors?offset=41500&limit=500> .
    hydra:nextPage <http://explore.ilastic.be/iminds/authors?&offset=42000&limit=500> .

<#iMindsAuthor>
    rml:logicalSource [ 
	rml:source <#InputAPI>;
        rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.[*]";
    ];

    rr:subjectMap [
        rr:template "http://www.ex.com/author/{CRM ID}"; 
        #rr:class ex:Author ;
        crml:booleanCondition <#iMindsAuthorCondition>
    ];

    rr:predicateObjectMap [
        rr:predicate ex:firstName;

        rr:objectMap [ 
            rml:reference "Auteur naam" ;
            ]
    ];

    rr:predicateObjectMap [
        rr:predicate ex:lastName;

        rr:objectMap [ 
            rml:reference "Auteur voornaam" ;
            ]
    ];

    rr:predicateObjectMap [
    rr:predicate cerif:linksToOrganisationUnit;
    rr:objectMap [
      rr:parentTriplesMap <#UniversityMapping> ;
      crml:booleanCondition <#NonEmptyCRM_Condition> ;
      rr:joinCondition [
        rr:parent "Groep v/d auteur - CRM ID" ;
        rr:child "Groep v/d auteur - CRM ID" ] ] ].

<#NotiMindsAuthor>
    rml:logicalSource [ 
	rml:source <#InputAPI>;
        rml:referenceFormulation ql:JSONPath;
	rml:iterator "$.[*]";
    ];

    rr:subjectMap [
        rr:template "http://www.ex.com/author/{Auteur naam}_{Auteur voornaam}"; 
        #rr:class ex:Author ;
        crml:booleanCondition <#NotiMindsAuthorCondition>
    ];

    rr:predicateObjectMap [
        rr:predicate ex:firstName;

        rr:objectMap [ 
            rml:reference "Auteur naam" ;
            ]
    ];

    rr:predicateObjectMap [
        rr:predicate ex:lastName;

        rr:objectMap [ 
            rml:reference "Auteur voornaam" ;
            ]
    ].

<#UniversityMapping>
  rml:logicalSource <#GroupsInput> ;

  rr:subjectMap [
    rr:template "http://explore.ilastic.be/university/{Groep v/d auteur - kenniscentrum code}";
    rr:class cerif:OrganizationalUnit ;
    crml:booleanCondition <#MeaningfullCRM_Condition> ;
  ].

######################################################################################
# 5. Conditions
######################################################################################

<#NotiMindsAuthorCondition>
    crml:condition """match(%%id%%,0)""" ;
    crml:binding [
        crml:variable "id" ;
        rml:reference "Auteur is iMinds " ] .

<#iMindsAuthorCondition>
    crml:condition """match(%%id%%,\"1\")""" ;
    crml:binding [
        crml:variable "id" ;
        rml:reference "Auteur is iMinds " ] .

<#NonEmptyCRM_Condition>
    crml:condition """!match(%%id%%,\"\")""" ;
    crml:binding [
        crml:variable "id" ;
        rml:reference "Groep v/d auteur - CRM ID" ] .

<#MeaningfullCRM_Condition>
    crml:condition """!match(%%id%%,\"-NA\")""", """!match(%%id%%,\"-MI\")""" ;
    crml:binding [
        crml:variable "id" ;
        rml:reference "Groep v/d auteur - kenniscentrum code" ] .